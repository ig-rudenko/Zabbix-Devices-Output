import pexpect


def strip_text(text: str) -> str:
    return text.replace("[42D", '').replace("        ", '').replace(
            "\x1b[m\x1b[60;D\x1b[K", '').replace(
            '\x08\x08\x08\x08\x08\x08\x08\x08\x08\x08          \x08\x08\x08\x08\x08\x08\x08\x08\x08\x08',
            '').replace('[81D[32C[80D[27C[1A[J', '').replace('[81D[35C', '').replace('[81D[34C', '').strip()


def format_command(command: str) -> str:
    symbols = ['.', '|', '?', '(', ')', '[', ']', '+', '*']
    for letter in command:
        if letter in symbols:
            command = command.replace(letter, f'\\'+letter)
    return command


def send_command(session, command: str, prompt: str, space_prompt: str = None, before_catch: str = None,
                 expect_command=True) -> str:
    output = ''
    session.sendline(command)   # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É

    if expect_command:
        session.expect(command[-30:])  # –°—á–∏—Ç—ã–≤–∞–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É —Å –ø–æ–ø—Ä–∞–≤–∫–æ–π –ø–æ –¥–ª–∏–Ω–µ —Å–∏–º–≤–æ–ª–æ–≤
    if before_catch:
        session.expect(before_catch)

    if space_prompt:    # –ï—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ —Å—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, —Ç–æ —Å–æ–∑–¥–∞–µ–º —Ü–∏–∫–ª
        while True:
            match = session.expect(
                [
                    prompt,             # 0 - –∫–æ–Ω–µ—Ü
                    space_prompt,       # 1 - –¥–∞–ª–µ–µ
                    pexpect.TIMEOUT     # 2
                ]
            )
            output += strip_text(str(session.before.decode('utf-8')))   # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã
            if match == 0:
                break
            elif match == 1:
                session.send(" ")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª –ø—Ä–æ–±–µ–ª–∞, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤—ã–≤–æ–¥–∞
                output += '\n'
            else:
                print("    –û—à–∏–±–∫–∞: timeout")
                break
    else:   # –ï—Å–ª–∏ –≤—ã–≤–æ–¥ –∫–æ–º–∞–Ω–¥—ã –≤—ã–¥–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é, —Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª
        try:
            session.expect(prompt)
        except pexpect.TIMEOUT:
            pass
        output = session.before.decode('utf-8')
    return output
